@inject SignInManager<AdvProg_ApplicationUser> SignInManager
@inject UserManager<AdvProg_ApplicationUser> UserManager

@using Microsoft.AspNetCore.Identity
@using advProj_BusinessObjects;

@{
    if (SignInManager.IsSignedIn(User) && Global.userID == null)
    {
        var userAspID = UserManager.GetUserId(User);
        Global.setNormalId(userAspID);
    }
}

<div class="navbar-nav ml-auto">

    @if (SignInManager.IsSignedIn(User))
    {
        <!-- Notification menu -->
        <ul class="navbar-nav">
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDarkDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false" data-bs-auto-close="outside">
                    <i class="fa-regular fa-bell fa-lg"></i>
                </a>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDarkDropdownMenuLink" style="min-width: 250px;">

                    @*notification Options*@
                    <li>
                        <a class="dropdown-item text-dark" asp-controller="AdvProjNotifications" asp-action="Index" asp-route-unread="true"><i class="fa-solid fa-envelope"></i> New Notifications</a>
                    </li>

                    <li class="dropdown-divider"></li>

                    <li>
                        <a class="dropdown-item text-dark" asp-controller="AdvProjNotifications" asp-action="Index"><i class="fa-solid fa-envelope-open"></i> All Notifications</a>
                    </li>

                </ul>
            </li>
        </ul>
    }

    <!-- login menu -->
    <ul class="navbar-nav">
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDarkDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false" data-bs-auto-close="outside">
                <i class="fa-regular fa-circle-user fa-lg"></i>
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDarkDropdownMenuLink" style="min-width: 250px;">


                @if (SignInManager.IsSignedIn(User))
                {
                    @*profile and logout buttons*@
                    <li>
                        <p class="dropdown-item text-dark">Welcome Back @UserManager.GetUserName(User)!</p>
                    </li>

                    <li class="dropdown-divider"></li>

                    <li class="dropdown-item text-dark">
                        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="fa-regular fa-user"></i> Profile</a>
                    </li>

                    <li class="dropdown-item text-dark">
                        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                            <button id="logout" type="submit" class="nav-link btn btn-link text-dark"><i class="fa-solid fa-right-from-bracket"></i> Logout</button>
                        </form>
                    </li>
                }
                else
                {
                    @*login form Button - if user is not logged in*@
                    <li>
                        <a class="dropdown-item text-dark" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="fa-solid fa-right-to-bracket"></i> Login</a>
                    </li>

                    <li class="dropdown-divider"></li>

                    <li>
                        <a class="dropdown-item text-dark" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="fa-regular fa-user"></i> Sign up</a>
                    </li>
                }

            </ul>
        </li>
    </ul>

    

</div>
