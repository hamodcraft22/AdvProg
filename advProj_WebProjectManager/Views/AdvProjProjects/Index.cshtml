@using advProj_WebProjectManager.ViewModels;
@model ProjectIndexViewModel
@*@model IEnumerable<advProj_BusinessObjects.AdvProjProject>*@

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

@{
    if (TempData["ErrorMsg"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            @TempData["ErrorMsg"].ToString()
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
}

@*search form*@
<div class="d-flex align-items-center justify-content-center flex-column gap-4">
    <form asp-controller="advProjProjects" asp-action="Index" method="get" class="d-flex">
        @*search box for project name*@
        <div class="input-group m-1">
            
            @*show clear button when there is a search input only*@
            @{
                if (!String.IsNullOrEmpty(Context.Request.Query["projectName"].ToString()))
                {

                    if (String.IsNullOrEmpty(Context.Request.Query["member"].ToString()))
                    {
                        <a href="advProjProjects" class="input-group-text text-decoration-none">
                            <i class="fa-solid fa-circle-xmark"></i>
                        </a>
                    }
                    else
                    {
                        <a href="advProjProjects?member=true" class="input-group-text text-decoration-none">
                            <i class="fa-solid fa-circle-xmark"></i>
                        </a>
                    }
                }
            }
            @*text box input*@
            <div class="form-floating">
                <input type="text" name="ProjectName" class="form-control" id="ProjectName" placeholder="Project Name" value="@Context.Request.Query["projectName"]">
                <label for="ProjectName">Project Name</label>
            </div>
            @*submit button*@
            <button type="submit" value="Search" class="input-group-text">
                <i class="fas fa-search"></i>
            </button>

        </div>
        @*combo box for projects*@
        <div class="input-group m-1">
            @*show clear button when there is a search input only*@
            @{
                if (!String.IsNullOrEmpty(Context.Request.Query["StatusInput"].ToString()))
                {
                    if (String.IsNullOrEmpty(Context.Request.Query["member"].ToString()))
                    {
                        <a href="advProjProjects" class="input-group-text text-decoration-none">
                        <i class="fa-solid fa-circle-xmark"></i>
                    </a>
                    }
                    else
                    {
                        <a href="advProjProjects?member=true" class="input-group-text text-decoration-none">
                        <i class="fa-solid fa-circle-xmark"></i>
                    </a>
                    }
                }
                
            }
            @*combo box*@
            <div class="form-floating">
                <select asp-for="StatusInput" asp-items="Model.Status.Select(i => new SelectListItem{Text = i.StatusName, Value = i.StatusId.ToString()})" class="form-control">
                    <option value="">All</option>
                </select>
                <label for="ProjectName">Status</label>
            </div>
            @*filter btn*@
            <button type="submit" value="Search" class="input-group-text">
                <i class="fa-solid fa-filter"></i>
            </button>



        </div>
        @*hidden value as a member so the page dosent change - if the user is acsing a mebmer page*@
        @{
            if (!String.IsNullOrEmpty(Context.Request.Query["member"].ToString()))
            {
                <input type="hidden" name="member" value="true">
            }
        }
    </form>
</div>

@{
    if (String.IsNullOrEmpty(Context.Request.Query["member"].ToString()))
    {
        <p>
            <a asp-action="Create" class="btn btn-primary">Create a New Project</a>
        </p>
    }
}

<table class="table table-striped">
    <thead>
        <tr>
            @*writing the names manually - ocd reasosns*@
            <th class="text-center">
                Project Name
            </th>
            <th class="text-center">
                Description
            </th>
            <th class="text-center">
                Start Date
            </th class="text-center">
            <th class="text-center">
                End Date
            </th>
            <th class="text-center">
                Manager
            </th>
            <th class="text-center">
                Status
            </th>
            <th class="text-center">
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Projects)
        {
            string formatClass = "";

            if (item.Status != null)
            {
                if (item.Status.StatusId == 3)
                {
                    formatClass = "table-warning";
                }
                else if (item.Status.StatusId == 4)
                {
                    formatClass = "table-secondary";
                }
                else if (item.Status.StatusId == 5)
                {
                    formatClass = "table-success";
                }
            }

            <tr class="@formatClass">
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectDescription)
                </td>
                <td class="text-center">
                    @Convert.ToDateTime(item.StartDate).ToString("dd/MM/yyyy")
                </td>
                <td class="text-center">
                    @Convert.ToDateTime(item.StartDate).ToString("dd/MM/yyyy")
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Manager.FullName)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Status.StatusName)
                </td>
                <td class="text-center">
                    @{
                        if (String.IsNullOrEmpty(Context.Request.Query["member"].ToString()))
                        {
                            <a type="button" class="btn btn-primary btn-sm" asp-action="Details" asp-route-id="@item.ProjectId"><i class="fa-solid fa-circle-info fa-xs"></i></a>
                        }
                        else
                        {
                            <a type="button" class="btn btn-primary btn-sm" asp-action="Details" asp-route-id="@item.ProjectId" asp-route-Member="true"><i class="fa-solid fa-circle-info fa-xs"></i></a>     
                        }
                    }
                    @{
                        if (String.IsNullOrEmpty(Context.Request.Query["member"].ToString()))
                        {     
                            <a type="button" class="btn btn-success btn-sm" asp-action="Edit" asp-route-id="@item.ProjectId"><i class="fa-solid fa-pen-to-square fa-xs"></i></a> 
                            <a type="button" class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.ProjectId"><i class="fa-solid fa-trash fa-xs"></i></a> 
                        }
                    }
                    @{
                        if (String.IsNullOrEmpty(Context.Request.Query["member"].ToString()))
                        {
                            <a type="button" class="btn btn-warning btn-sm" asp-controller="advProjTasks" asp-action="Index" asp-route-id="@item.ProjectId"><i class="fa-solid fa-list-check"></i></a>
                        }
                        else
                        {
                            <a type="button" class="btn btn-warning btn-sm" asp-controller="advProjTasks" asp-action="Index" asp-route-id="@item.ProjectId" asp-route-Member="true"><i class="fa-solid fa-list-check"></i></a>  
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
